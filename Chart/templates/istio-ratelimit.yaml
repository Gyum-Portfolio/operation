{{- if .Values.istio.rateLimit.enabled }}
apiVersion: config.internal.istio.io/v1alpha1
kind: RateLimitConfig
metadata:
  name: {{ .Values.istio.rateLimit.rateLimitName }}
  namespace: {{ .Values.istio.gateway.namespace }}
spec:
  rules:
  - actions:
    - requestHeaders:
        headerName: "{{ .Values.istio.rateLimit.matchHeader }}"
        descriptorKey: "{{ .Values.istio.rateLimit.matchHeader }}"
    limits:
    - requestsPerUnit: {{ .Values.istio.rateLimit.requestsPerUnit }}
      unit: {{ .Values.istio.rateLimit.unit }}

---

apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Values.istio.rateLimit.rateLimitName }}-filter
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        portNumber: {{ .Values.istio.gateway.port }}
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.ratelimit
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
          domain: istio-ratelimit
          rate_limit_service:
            grpc_service:
              envoy_grpc:
                cluster_name: rate_limit_cluster
              timeout: 0.25s
  - applyTo: CLUSTER
    match:
      context: GATEWAY
    patch:
      operation: ADD
      value:
        name: rate_limit_cluster
        type: STRICT_DNS
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:
          cluster_name: rate_limit_cluster
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: istio-ratelimit
                        port_value: 8081
{{- end }}