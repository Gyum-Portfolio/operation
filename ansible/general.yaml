---
- name: Setup base
  hosts: all
  become: true
  tasks:

    - name: STEP 5 - Disable swap
      shell: swapoff -a

    - name: Remove swap entry from /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^\s*[^#]\S+\s+swap\s'
        state: absent

    - name: STEP 6 - br_netfilter
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load br_netfilter module now
      modprobe:
        name: br_netfilter
        state: present

    - name: STEP 7 - IPv4 forwarding
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { key: net.bridge.bridge-nf-call-ip6tables, value: 1 }
        - { key: net.bridge.bridge-nf-call-iptables, value: 1 }
        - { key: net.ipv4.ip_forward, value: 1 }

    - name: STEP 8 - static /etc/hosts file
      copy:
        src: ../hosts
        dest: /etc/hosts

# ansible/general.yaml
- hosts: all
  become: yes # Most of these tasks require root privileges
  tasks:
    # Step 9: Add Kubernetes repository
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Dependencies #making sure all dependencies are installed 
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
          - lsb-release
          - software-properties-common

    - name: Create directory for Kubernetes GPG
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Add Kubernetes APT key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key 
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: present

    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
        state: present

    - name: Update apt cache after adding Kubernetes repository
      ansible.builtin.apt:
        update_cache: yes

    # Step 10: Install Kubernetes components
    - name: Install Kubernetes components
      ansible.builtin.apt:
        name:
          - containerd=1.7.24
          - runc=1.1.12
          - kubelet=1.32.4
          - kubeadm=1.32.4
          - kubectl=1.32.4
        state: present
        update_cache: yes

    # Step 11: Configure Containerd
    - name: Generate default containerd config
      command: containerd config default
      register: containerd_config
      changed_when: false  

    - name: Write default containerd config
      copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        force: no
        owner: root
        group: root
        mode: '0644'
      notify: Restart containerd

    - name: Set disable_apparmor = true
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: 'disable_apparmor =.*'
        line: 'disable_apparmor = true'

    - name: Set sandbox_image to registry.k8s.io/pause:3.10
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: 'sandbox_image =.*'
        line: 'sandbox_image = "registry.k8s.io/pause:3.10"'

    
    - name: Set SystemdCgroup = true
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup =.*'
        line: 'SystemdCgroup = true'

    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: yes
    