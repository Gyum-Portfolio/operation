- hosts: ctrl
  become: true
  gather_facts: false
  vars:
    apiserver_ip:         192.168.56.100
    pod_network_cidr:     10.244.0.0/16
    flannel_iface:        "eth1"

  tasks:
    # 13. Init cluster
  - name: Check if cluster already initialised
    stat:
      path: /etc/kubernetes/admin.conf
    register: kubeconfig

  - name: Initialise control plane
    shell: >
      kubeadm init
      --apiserver-advertise-address={{ apiserver_ip }}
      --control-plane-endpoint={{ apiserver_ip }}:6443
      --node-name=ctrl
      --pod-network-cidr={{ pod_network_cidr }}
    when: not kubeconfig.stat.exists
    register: init_out

  - name: Debug kubeadm init
    debug:
      var: init_out.stdout_lines
    when: init_out.changed

    # 14. Setup kubectl
  - name: Ensure kubeconfig for vagrant user
    block:
      - file:
          path: /home/vagrant/.kube
          state: directory
          owner: vagrant
          group: vagrant
          mode: '0755'

      - copy:
          src: /etc/kubernetes/admin.conf
          dest: /home/vagrant/.kube/config
          remote_src: yes
          owner: vagrant
          group: vagrant
          mode: '0600'

      - copy:
          src: /etc/kubernetes/admin.conf
          dest: /vagrant/admin.conf
          remote_src: yes
          mode: '0644'
    when: kubeconfig.stat.exists or init_out.changed

    # 15. Pod network (Flannel)
  - name: Copy local Flannel manifest
    copy:
      src: /vagrant/ansible/files/flannel/kube-flannel.yml              
      dest: /tmp/kube-flannel.yml
      mode: 0644

  - name: Patch Flannel --iface
    replace:
      path: /tmp/kube-flannel.yml
      regexp: '(- --iface=)[^\s]+'
      replace: '\1{{ flannel_iface }}'

  - name: Check if Flannel namespace exists
    command: kubectl get namespace kube-flannel --kubeconfig=/etc/kubernetes/admin.conf
    register: flannel_ns
    failed_when: false
    changed_when: false

  - block:
      - name: Wait for API Server to be ready
        wait_for:
          host: "{{ apiserver_ip }}"
          port: 6443
          state: started
          timeout: 300
          delay: 5
        delegate_to: "{{ groups['ctrl'][0] }}"
        run_once: true

      - name: Apply Flannel CNI manifest
        shell: >
          kubectl apply --validate=false
          -f /tmp/kube-flannel.yml
          --kubeconfig=/etc/kubernetes/admin.conf
        register: flannel_out
        retries: 10
        delay: 10
        until: flannel_out.rc == 0
    when: flannel_ns.rc != 0

    # 16. Install Helm
  - name: Add Helm apt key & repo
    apt_key:
      url: https://baltocdn.com/helm/signing.asc
      state: present
    register: helm_key

  - name: Add Helm repo
    apt_repository:
      repo: deb https://baltocdn.com/helm/stable/debian/ all main
    when: helm_key.changed

  - name: Install Helm
    apt:
      name: helm
      state: present
      update_cache: yes

    # 17. Install Helm diff plugin
  - name: Ensure helm-diff plugin is installed
    become: false
    environment:
      HOME: /home/vagrant
    shell: |
      helm plugin list | grep -q diff || \
      helm plugin install https://github.com/databus23/helm-diff
    args:
      creates: /home/vagrant/.local/share/helm/plugins/helm-diff